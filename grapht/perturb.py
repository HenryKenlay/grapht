# AUTOGENERATED! DO NOT EDIT! File to edit: 03_perturb.ipynb (unless otherwise specified).

__all__ = ['khop_edge_deletion']

# Cell
from nbdev.showdoc import *
import networkx as nx
from .graphtools import non_pendant_edges
from .sampling import khop_subgraph, sample_edges

# Cell
def khop_edge_deletion(G, k, r):
    """
    Removes r edges which are in a k-hop neighbourhood of some node, the graph will remain connected
    """
    solution = None
    while solution is None:
        subgraph = khop_subgraph(G, k)
        if len(non_pendant_edges(subgraph)) < r:
            continue
        edges = sample_edges(subgraph, r, non_pendant=True)
        Gp = G.copy()
        Gp.remove_edges_from(edges)
        if nx.is_connected(Gp):
            solution = Gp
    return solution