# AUTOGENERATED! DO NOT EDIT! File to edit: 02_metrics.ipynb (unless otherwise specified).

__all__ = ['sparse_2norm', 'sparse_maxnorm', 'laplacian_distance', 'LineDistances']

# Cell
from nbdev.showdoc import *
from .graphtools import laplacian
from functools import lru_cache
import networkx as nx
import numpy as np
import scipy.sparse as sp

# Cell
def sparse_2norm(A):
    "Returns the matrix 2-norm of a sparse matrix `A`"
    return np.abs(sp.linalg.eigsh(A, k=1, which='LM', return_eigenvectors=False))[0]

def sparse_maxnorm(A):
    "Returns the max |A_ij| for a sparse matrix `A`"
    return max(-A.min(), A.max())

# Cell
def laplacian_distance(G, Gp, setdiag=False):
    "Calculates $|| \mathcal{L} -  \mathcal{L}_p ||$ using the matrix 2-norm"
    L = laplacian(G, setdiag)
    Lp = laplacian(Gp, setdiag)
    E = Lp - L
    return sparse_2norm(E)

# Cell
class LineDistances():

    def __init__(self, G):
        self.G = G
        self.line_graph = nx.line_graph(G)

    @lru_cache(maxsize=None)
    def __call__(self, edge1, edge2):
        return nx.shortest_path_length(self.line_graph, edge1, edge2)